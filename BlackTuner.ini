[Application]
Name = "Black Tuner"
copyright = "chezta"
;
;$AppPath
;	AppPath = name bin config dash inc tune, help
AppPath = "App", "bin", "config", "dash", "inc", "tune", "help"
;$ProjectPath
;	ProjectPath = name config inc dash log tuneview fileproject.ini fileproject.properties filetune.ext
ProjectPath = "Projects", "projectCfg", "inc", "Dashboard", "DataLogs", "TuneView", "MainController.ini", "project.properties", "CurrentTune.msq"
; FileExtention = default, tune, dash, inc
FileExtention = ".ini | .ecu", ".msq", ".dash", ".inc"



[SettingGroups]
;settingGroup = name, displayName, option(SHOW = always show)
;	settingOption = name, displayName, option(DEFAULT = set as default)
;	settingOption = DEFAULT, displayName

;	settingGroup = "lambdaSensor", "EGO O2 Sensor"
;		settingOption = "NARROW_BAND_EGO", "Narrowband Sensor", DEFAULT
;		settingOption = "WB_1_0_LINEAR", "Wideband in NB Emulator Mode, 0-1v 1.5-0.5 Lambda"
;		settingOption = "AEM_LINEAR", "AEM UEGO / Linear AEM-30-42xx"
;		settingOption = "AEM_NON_LINEAR", "AEM UEGO(Legacy) Controller AEM-30-230x"
;		settingOption = "DIYWB_NON_LINEAR", "DIY-WB or Tech Edge non-linear output"
;		settingOption = "DYNOJET_LINEAR", "DynoJet Wideband Commander"
;		settingOption = "TECHEDGE_LINEAR", "Tech Edge sensor giving 0-5V 9-19:1 AFR"
;		settingOption = "INNOVATE_1_2_LINEAR", "Innovate sensor giving 1-2V 10-20:1 AFR"
;		settingOption = "INNOVATE_0_5_LINEAR", "Innovate, PLX 0-5V 10-20:1 AFR"
;		settingOption = "INNOVATE_LC1_DEFAULT", "Innovate LC-1 default, 0-5v = 0.5-1.5 lambda"
;		settingOption = "ZEITRONIX_NON_LINEAR", "Zeitronix Non-linear WB"
;		settingOption = "WB_UNKNOWN", "Wideband sensor but none of the above types"
	
	settingGroup = "lambdaDisplay", "Lambda Display" 
		settingOption = "LAMBDA", "Lambda"
		settingOption = "AFR", "AFR", DEFAULT
	
	settingGroup = "temperatureDisplay", "Temperature Display"
		settingOption = "FAHRENHEIT", "Fahrenheit", DEFAULT, ( (%s * 9 / 5) + 32 ) ;direct conversion, don't set name with "DEFAULT" if need conversion
		settingOption = "CELSIUS", "Celsius",                ( (%s - 32) * 5 / 9 ) ;direct conversion, usually use in tune file
	
;	settingGroup = "mapBaro", "MAP Baro"
;		settingOption = "DEFAULT", "MAP Baro off (Default)" 
;		settingOption = "MAPbaro", "MAP Baro ON - Must match Other Fuel Settings"
;	
;  settingGroup = "additional fuel", "Additional Fuel" 
;    settingOption = "DEFAULT", "N2O off (Default)"
;    settingOption = "n2o", "N2O"
;              
;	settingGroup = "pressureDisplay", "Manifold Pressure Display"
;		settingOption = "KPa", "KPa", DEFAULT
;		settingOption = "PSI", "PSI"
;	
;	settingGroup = "fuelingAlgorithm", "Fueling Algorithms"
;		settingOption = "SPEED_DENSITY", "Speed Density Fueling Algorithm", DEFAULT
;		settingOption = "ALPHA_N", "Alpha-N fueling Algorithm"
;		settingOption = "AIR_FLOW_METER", "Air Flow Meter"
;	
;	settingGroup = "mapSensor", "MAP Sensor"
;		settingOption = "MPX4115", "MPX4115 - 115 kPa, MS v1.01"
;		settingOption = "MPX4250", "MPX4250 - 250 kPa, MS v2.2+", DEFAULT
;		settingOption = "MPXH6300A", "MPXH6300 - 300 kPa"
;		settingOption = "MPXH6400A", "MPXH6400 - 400 kPa"

[PcVariables]
	_displacementUnit = bits,  U08, [0:0], "CID", "CC"
	_flowUnit         = bits,  U08, [0:0], "lb/hr", "cc/min"
	_fuelType         = bits,  U08, [0:2], "Gasoline", "Methanol", "Ethanol", "Diesel", "E85 (85% ethanol)", , "INVALID", "INVALID"

	_reqFuel      = scalar, U16, "ms",  1.0, 0.0,   0.1,   25.5, 1
	_displacement = scalar, U16, "",    1.0,   0,     0,  10000, 1
;	_ncylinders   = scalar, U08, "",      1,   0,     1,     12, 0
	_flowRate     = scalar, U16, "",    1.0,   0,     0,   1000, 1
	_afrRatio     = scalar, U16, "",    1.0, 0.0,   0.0,   25.5, 1

;	_fuelCCmin    = array,  U16, [5],  "", 0.0,     0.0,   8.0,  20.0, 1
;	_fuelFD       = array,  U16, [5],  "", 0.001, 0.000, 0.500, 1.000, 3
	_fuelCCmin    = array,  U16, [5],  "", 1.0,     0.0,   8.0,  20.0, 1
	_fuelFD       = array,  U16, [5],  "", 0.001, 0.000, 0.500, 1.000, 3
	
[ConstantsExtensions]
	defaultValue = _displacement,     50
	defaultValue = _displacementUnit, 1
	defaultValue = _flowRate,         30
	defaultValue = _flowUnit,         1
	defaultValue = _afrRatio,         14.7

	defaultValue = _fuelType,         0
	defaultValue = _fuelCCmin,        10.2 9.6 9.6 8.9 9.9
	defaultValue = _fuelFD,           0.745 0.792 0.791 0.850 0.768


	;reqFuel       = scalar, U08,      24,        "ms",        0.1,       0.0,   0.0,    25.5,      1

[Functions]
;Fuel Flow Rate (Mass Flow)
;The formula for required fuel flow rate (in grams/second or cc/min) is:
;
;	Fuel?Flow?Rate = (Engine?Displacement ? RPM ? Volumetric?Efficiency) / (Air-Fuel?Ratio ? Number?of?Cylinders ? 2)
;
;The factor "2" accounts for a four-stroke engine where only one intake stroke occurs every two revolutions.

;Stoichiometric Air-Fuel Ratio (AFR): For gasoline, this is typically 14.7:1
;Air Density at MAP: The air density at 100 kPa (1 bar) and standard temperature (~20?C or 293 K) is ~1.184 kg/m?.
;Fuel Density (FD): Density of the fuel, typically ~0.745 kg/L for gasoline.
;	Fuel Type	          lb/gal	 kg/L	  g/cc
;	Gasoline (typical)	6.2	     0.745	0.745
;	Methanol	          6.6	     0.792	0.792
;	Ethanol	            6.59	   0.791	0.791
;	Diesel	            7.1	     0.850	0.850
;	E85 (85% ethanol)	  ~6.4	   ~0.768	~0.768
;	Jet A (aviation)	  6.8	     0.815	0.815
;	Kerosene	          6.7	     0.803	0.803
;	LPG (Propane)	      4.24	   0.508	0.508

;Air?Mass?per?Cylinder = (Engine?Displacement * Air?Density?at?MAP * Volumetric?Efficiency) / Number Cylinder
;Fuel?Mass?per?Cylinder = Air?Mass?per?Cylinder / AFR
;Fuel?Volume?per?Cylinder = Fuel?Mass?per?Cylinder / Fuel Density
;Injector?Flow?Rate?(cc/ms) = Injector Flow Rate / ( 60 ? 1000 )
;Pulse?Width?(PW)= Air?Mass?per?Cylinder / Injector?Flow?Rate?per?Pulse
;
;cubic = 16.387064 CC
;
;6.2 lb/gal (typical gasoline):
;	cc/min= (lb/hr ? 453.592 ? 3785.41) / ( 6.2 ? 60)
; cc/min = lb/hr ? 10.2
;
;Gasoline (typical)	6.2  lb/gal	  10.2
;Methanol	          6.6  lb/gal	  9.6
;Ethanol	          6.59 lb/gal	  9.6
;Diesel	            7.1  lb/gal	  8.9
;E85 (85% ethanol)	~6.4 lb/gal	  9.9



;Naturally ?Aspirated, Turbo, Turbo w/Intercooler, Supercharger, and Supercharger w/Intercooler.

	;convertion
	;lbTocc = { (_flowUnit * 453.592 ? 3785.41) / ( 6.2 ? 60) }
	_lbTocc = { arrayValue( array._fuelCCmin, _fuelType ) }
	__fuelFD =  { arrayValue( array._fuelFD, _fuelType ) }
	__displacement = { (_displacementUnit == 0) ? ( _displacement * 16.387064 ) : _displacement }
	__flowRate = { (_flowUnit == 0) ? _lbTocc : _flowRate}
	
	_airMass = { ( __displacement * 1.184 * 1 ) / nCylinders }
	_fuelMass = { _airMass / _afrRatio }
	_fuelVolume = { _fuelMass / __fuelFD }
;	InjFlowRate = { _flowRate / 0.06 }
	_reqPW = { _fuelVolume / ( __flowRate / 0.06 ) }

[Command]
;	_cmdReqPW = ;update _reqFuel
_tpsMin = getAndSet, tps | tpsMin
_tpsMax = getAndSet, tps | tpsMax

_returnPW = getAndSet, _reqPW | reqFuel
;dialog
_dlgFuelCalc = showDialog, "std_fuel_calculator"

;commandButton
_btnTpsMin = "Get Current", _tpsMin, {}
_btnTpsMax = "Get Current", _tpsMax, {}
_btnFuelCalculator = "Required Fuel...", _dlgFuelCalc

[Menu]
menuDialog = main
	menu = "Tools"
		subMenu = std_calibrates, "Calibrate TPS"

[DefaultMenu]
menuDialog = main
	menu = "File"
		subMenu = std_projectOpen, "Open"
		subMenu = std_projectNew, "New"
		subMenu = std_projectProperties, "Properties"
		subMenu = std_shellExec($ProjectPath), "Show Folder"
		subMenu = std_tune, "Tune"

menuDialog = main
	menu = "Options"

menuDialog = main
	menu = "Data Logging"
		subMenu = std_logStart, "Start"
		subMenu = std_logStop, "Stop"
		subMenu = std_logProfile, "Logging Profile"
		subMenu = std_logTrigger, "Trigger Logging"
;		subMenu = std_logBrowse, "Browse / Import SD Card"
;		subMenu = std_logRtc, "Setup reatime clock"
;		subMenu = std_logonboard, "Setup onboard logger / SD"

menuDialog = main
	menu = "Comunications"
		subMenu = std_comSetting, "Setting"
		subMenu = std_comTerminal, "Terminal"

menuDialog = main
	menu = "Tools"
		subMenu = std_toolFirmare, "Install/update Firmware"

menuDialog = main
	menu = "Help"
		subMenu = std_help, "About"
		;subMenu = helpGeneral, "User About"

[DefaultDefined]
;[std_calibrate]
dialog= std_calibrates, "Calibrate Throttle"
	field = "Closed Throttle ADC Count", tpsMin | cmd(_btnTpsMin)
	field = "Full Throttle ADC Count", tpsMax | cmd(_btnTpsMax)

;Required fuel section
;[std_fuel_calculator]
dialog= std_fuel_calculator, "Required Fuel Calculator"
	field = "Fuel Type", _fuelType
	field = "Engine Displacement", _displacement | _displacementUnit
	field = "Number of Cyinders", nCylinders
	field = "Injector Flow", _flowRate | _flowUnit
	field = "Air-Fuel Ratio",	_afrRatio
	;
	actionButton = "Cancel", cmdNone, closeDialogOnClick
	actionButton = "OK", _returnPW, closeDialogOnClick

;[std_required_fuel]
dialog= std_required_fuel, "Calculate Required Fuel"
	field = "", _reqFuel | cmd(_btnFuelCalculator) 
	;commandButton = "Required Fuel...", std_fuel_calculator
	field = "Current(ms)", reqFuel, {0}

;[std_injection]
dialog= std_injection, ""
	panel = std_required_fuel
	field = "Control Algorithm", algorithm
	field = "Squirts per Engine Cycle", divider
	field = "Injector Staging", alternate
	field = "Engine Stroke", twoStroke
	field = "Number of Cylinders", nCylinders
	field = "Injector Port Type", injType
	field = "Number of Injectors", nInjectors
	field = "Engine Type", engineType



;
;test only *****************************************************************************************
;    dialog = engine_constants_southwest, "Speeduino Board"
;        field = "!This is a critical setting!"
;        field = "?Outputs WILL NOT work if incorrect board is selected"
;        field = "Board Layout",             pinLayout
;        field = "Stoichiometric ratio",     stoich
;        field = "Injector Layout",          injLayout
;        field = "Injector Pairing",         inj4CylPairing, {}, { injLayout != 0 && nCylinders == 4 }
;        field = "MAP Sample method",        mapSample
;        field = "MAP Sample switch point",  mapSwitchPoint,      { mapSample >= 1 }
;
;    dialog = engine_constants_west, ""
;        panel = std_injection, North
;        panel = engine_constants_southwest
;
;    dialog = engine_constants_northeast, "Oddfire Angles"
;        field = "Channel 2 angle", oddfire2,                { engineType == 1 }
;        field = "Channel 3 angle", oddfire3,                { engineType == 1 && nCylinders >= 3 }
;        field = "Channel 4 angle", oddfire4,                { engineType == 1 && nCylinders >= 4 }
;
;    dialog = engine_constants_east, ""
;        panel = engine_constants_northeast, North
;        field = ""
;
;    dialog = engine_constants_warning, ""
;        field = "!Warning: The board you have selected may not have enough channels for sequential fuel!", {}, {}, { injLayout == 3 && !sequentialFuelAvailable }
;
;    dialog = engine_constants, "", border
;        topicHelp = "http://wiki.speeduino.com/en/configuration/Engine_Constants"
;        panel = engine_constants_warning, North
;        panel = engine_constants_west, West
;        panel = engine_constants_east, East
;        
;		; Knock control settings
;    dialog = knock_windows, "Knock Windows", xAxis
;        panel = knock_window_angle_curve, West, { knock_mode }
;        panel = knock_window_duration_curve, East, { knock_mode }
;
;    dialog = knock_settings_west, "Settings", yAxis
;        field = "Knock Mode",               knock_mode
;        field = "Knock Pin",                knock_pin,          { knock_mode }
;        field = "Knock active when pin is", knock_trigger,      { knock_mode == 1 }
;        field = "Use pullup",               knock_pullup,       { knock_mode == 1 }
;
;    dialog = knock_settings_east, "Detection and Response"
;        field = "#Detection"
;        field = "Knock count required",     knock_count,        { knock_mode == 1}
;        field = "Knock threshold required", knock_threshold,    { knock_mode == 2}
;        field = "Maximum MAP",              knock_maxMAP,       { knock_mode }
;        field = "Maximum RPM",              knock_maxRPM,       { knock_mode }
;        field = "Min. Time between events", knock_stepTime,     { knock_mode }
;        
;        ;Retard and recovery
;        field = "#Retard"
;        field = "Max Total retard",         knock_maxRetard,    { knock_mode }
;        field = "First step size",          knock_firstStep,    { knock_mode }
;        field = "Additional step size",     knock_stepSize,     { knock_mode }
;        field = "Time before recovery",     knock_duration,     { knock_mode } ;Time before retard starts ending
;        
;        field = "#Timing Recovery"
;        field = "Recovery step time",       knock_recoveryStepTime,     { knock_mode } ;Time between each recovery step
;        field = "Recovery step size",       knock_recoveryStep, { knock_mode }
;
;    dialog = knock_settings_top, "", xAxis
;        panel = knock_settings_west, West
;        panel = knock_settings_east, East
;;        panel = knock_settings_west
;;        panel = knock_settings_east
;
;    dialog = knockSettings, "", border
;        topicHelp = "http://wiki.speeduino.com/en/configuration/Knock"
;        panel = knock_settings_top, North
;        ;panel = knock_windows, South
;        
;    dialog = vss_gear_1, "", xAxis
;        field = "Speed ratio 1",            vssRatio1
;        commandButton = "Set Gear 1",       cmdVSSratio1, { vssMode > 0 }
;    dialog = vss_gear_2, "", xAxis
;        field = "Speed ratio 2",            vssRatio2
;        commandButton = "Set Gear 2",       cmdVSSratio2, { vssMode > 0 }
;    dialog = vss_gear_3, "", xAxis
;        field = "Speed ratio 3",            vssRatio3
;        commandButton = "Set Gear 3",       cmdVSSratio3, { vssMode > 0 }
;    dialog = vss_gear_4, "", xAxis
;        field = "Speed ratio 4",            vssRatio4
;        commandButton = "Set Gear 4",       cmdVSSratio4, { vssMode > 0 }
;    dialog = vss_gear_5, "", xAxis
;        field = "Speed ratio 5",            vssRatio5
;        commandButton = "Set Gear 5",       cmdVSSratio5, { vssMode > 0 }
;    dialog = vss_gear_6, "", xAxis
;        field = "Speed ratio 6",            vssRatio6
;        commandButton = "Set Gear 6",       cmdVSSratio6, { vssMode > 0 }
;
;    dialog = vss_gear_detection, "Gear Detection", yAxis
;        field = "After setting 'Pulses per km/mile' above"
;        field = "Drive in each gear (any speed) and press appropriate button"
;        panel = vss_gear_1
;        panel = vss_gear_2
;        panel = vss_gear_3
;        panel = vss_gear_4
;        panel = vss_gear_5
;        panel = vss_gear_6
;
;    dialog = vss_calibration, "VSS Calibration"()
;        field = "Pulses Per KM/VSS ratio",          vssPulsesPerKm, { vssMode > 0 }
;        commandButton = "60km/h auto-calibrate",       cmdVSS60kmh, { vssMode > 0 }  (vss=1)
;        field = "Smoothing Factor",           vssSmoothing, { vssMode > 0 }
;        
;    dialog = vssSettings, "", yAxis
;        topicHelp = "http://wiki.speeduino.com/en/configuration/VSS"
;        field = "VSS Input Mode",           vssMode
;        field = "VSS Pin",                  vssPin,         { vssMode > 1 }
;        ;field = "Use Pullup",               vssPullup,      { vssMode > 1 }
;        field = "VSS Aux in Channel",       vssAuxCh,       { vssMode == 1 }
;        
;        panel = vss_calibration
;        panel = vss_gear_detection
;        
;        
;       dialog = pwmidle_closedloop_pwm, "Closed-Loop Idle Valve Settings"
;         topicHelp = "file://$getProjectsDirPath()/docs/Megasquirt3_TunerStudio_MS_Lite_Reference-1.4.pdf#clidle"
;          field = "Idle Valve Minimum Duty",          pwmidle_closed_duty, { (IdleCtl == 2) && (IdleCtl_alg == 1) }
;          field = "Idle Valve Maximum Duty",                  pwmidle_open_duty, { (IdleCtl == 2) && (IdleCtl_alg == 1) }
;          field = "Dashpot Adder",  pwmidle_dp_adder, { (IdleCtl == 2) && (IdleCtl_alg == 1) }
;          field = "Use Last Value or Table", pwmidle_cl_opts_initvaluetable
;          field = "Use CLT Or MAT In Table Lookup", pwmidle_cl_opts_initval_clt, { pwmidle_cl_opts_initvaluetable }
;          field = "Close Delay (0 Means Do Not Close)", pwmidle_close_delay
;          field = "Shift Settings"
;          field = "Leave Valve Closed Above:", pwmidle_shift_lower_rpm, { pwmidle_close_delay > 0 }
;          field = "For This Number Of Seconds:", pwmidle_shift_open_time, { pwmidle_close_delay > 0 }
;
;       dialog = pwmidle_closedloop_stepper, "Closed-Loop Idle Valve Settings"
;          field = "Idle Valve Minimum Steps",         pwmidle_closed_steps, { (IdleCtl == 3) }
;          field = "Idle Valve Maximum Steps",               pwmidle_open_steps, { (IdleCtl == 3)  } 
;          field = "Dashpot Adder",  pwmidle_dp_adder_steps
;          field = "Use Last Value Or Table", pwmidle_cl_opts_initvaluetable
;          field = "Use CLT Or MAT In Table Lookup", pwmidle_cl_opts_initval_clt, { pwmidle_cl_opts_initvaluetable }
;          field = "Close Delay (0 Means Do Not Close)", pwmidle_close_delay
;          field = "Shift Settings"
;          field = "Leave Valve Closed Above:", pwmidle_shift_lower_rpm, { pwmidle_close_delay > 0 }
;          field = "For This Number Of Seconds:", pwmidle_shift_open_time, { pwmidle_close_delay > 0 }
;
;       dialog = pwmidle_closedloops, "", card
;        panel = pwmidle_closedloop_stepper, Center, { IdleCtl == 3 }
;        panel = pwmidle_closedloop_pwm, West, { IdleCtl == 2 }
;        
;       dialog = pwmidle_closedloop, "", xAxis       
;        panel = pwmidle_closedloop_pwm, West, { IdleCtl == 2 }
;        panel = pwmidle_closedloop_stepper, Center, { IdleCtl == 3 }
;        panel = pwmidle_closedloop_stepper, East, { IdleCtl == 3 }
;        
;       dialog = pwmidle_PID_gains, "Closed-Loop Idle PID Gains"
;          slider = "Closed-Loop Sensitivity", pwmidle_max_rpm_new, horizontal
;          field = "Tuning Mode", pwmidle_cl_opts_display_pid
;          field = "Proportional Gain",    pwmidle_Kp_new, { pwmidle_cl_opts_display_pid }
;          field = "Integral Gain",        pwmidle_Ki_new, { pwmidle_cl_opts_display_pid }
;          field = "Derivative Gain",      pwmidle_Kd_new, { pwmidle_cl_opts_display_pid } 
;
;       dialog = pwmidle_PID_behavior, "Closed-Loop Idle PID Delays And Behavior"
;          field = "PID Delay",            pwmidle_pid_wait_timer
;          field = "Crank To Run Taper",   pwmidlecranktaper 
;          field = "PID Ramp To Target Time", pwmidle_targ_ramptime
;          field = "PID Control Interval", pwmidle_ms
;          field = "PID Disable RPMdot", pwmidle_rpmdot_disablepid, { IdleCtl_vss != 1 }
;
;       dialog = pwmidle_PID_activation, "Closed-Loop Idle PID Activation Settings"
;          field = "Use VSS To Activate PID",         IdleCtl_vss
;          field = "Minimum VSS1", idleminvss, {IdleCtl_vss}
;          field = "Idle Activation TPS Threshold",   pwmidle_tps_threshold
;          field = "RPMdot Threshold", pwmidle_rpmdot_threshold, { IdleCtl_vss != 1 }
;          field = "Max Decel Load", pwmidle_decelload_threshold, { IdleCtl_vss != 1 }
;
;       dialog = pwmidle_empty, ""
;            field = ""
;            field = ""
;            field = ""
;            field = ""
;            field = ""
;            field = ""
;
;          dialog = pwmidle_west_panel, "", border
;            panel = pwmidle_closedloop, North ;pwmidle_closedloops
;            panel = pwmidle_PID_gains, Center 
;
;         dialog = pwmidle_mid_panel, "", border
;            panel = pwmidle_PID_behavior, North
;            panel = pwmidle_PID_activation, Center
;            panel = pwmidle_empty, South
;
;          dialog = combinedCLidle, "Closed-Loop Idle Settings", border
;            panel = pwmidle_west_panel, West
;            panel = pwmidle_mid_panel, Center
        



;	field = "",
;	field = "",
;	field = "",
;	field = "",
;	field = "",
;	field = "",
;	field = "",
;	field = "",
;	field = "",

;[Menu]
;
;menuDialog = main
;
;	menu = "File"
;		subMenu = std_project, "Vehicle Projects"
;		subMenu = std_tune_file, "Tune File"


;[TableEditor]
;   ;       table_id,    map3d_id,    "title",      page
;   table = veTable1Tbl,  veTable1Map,  "VE Table",   2
;      topicHelp = "http://wiki.speeduino.com/en/configuration/VE_table"
;      xBins       = rpmBins,  rpm
;      yBins       = fuelLoadBins, fuelLoad
;      xyLabels    = "RPM", "Fuel Load: "
;      zBins       = veTable
;
;      gridHeight  = 2.0
;      gridOrient  = 250,   0, 340
;      upDownLabel = "(RICHER)", "(LEANER)"
;
;    table = fuelTable2Tbl,  fuel2Map,  "Fuel Table 2",   11
;        topicHelp = "http://wiki.speeduino.com/en/configuration/VE_table#secondary-fuel-table"
;        xBins       = fuelRPM2Bins,  rpm
;        yBins       = fuelLoad2Bins, fuelLoad2
;        xyLabels    = "RPM", "Fuel Load: "
;        zBins       = veTable2
;
;        gridHeight  = 2.0
;        gridOrient  = 250,   0, 340
;        upDownLabel = "(RICHER)", "(LEANER)"
;
;   table = sparkTbl,    sparkMap,    "Ignition Advance Table", 3
;      xBins = rpmBins2, rpm
;      ;yBins = ignLoadBins, ignLoad
;      yBins = mapBins1, ignLoad
;      xyLabels    = "RPM", "Ignition Load: "
;      zBins = advTable1
;      gridHeight  = 3.0
;      upDownLabel = "ADVANCING", "RETARDING"
;
;    table = spark2Tbl,    spark2Map,    "Second Ignition Advance Table", 14
;      xBins = rpmBins3, rpm
;      ;yBins = ignLoadBins, ignLoad
;      yBins = mapBins2, ignLoad2
;      xyLabels    = "RPM", "Ignition Load: "
;      zBins = advTable2
;      gridHeight  = 3.0
;      upDownLabel = "ADVANCING", "RETARDING"
;
;    ;table = afrTbl,    afrTableMap,    "AFR Table", 5
;    table = afrTable1Tbl, afrTable1Map, "AFR Table", 5
;      xBins = rpmBinsAFR, rpm
;      yBins = loadBinsAFR, fuelLoad
;      zBins = afrTable
;      gridHeight  = 1.0
;      upDownLabel = "RICHER", "LEANER"
;      gridOrient  = 250,   0, 340
;
;    table = lambdaTable1Tbl, lambdaTable1Map, "Lambda Table", 5
;      xBins = rpmBinsAFR, rpm
;      yBins = loadBinsAFR, fuelLoad
;      zBins = lambdaTable
;      gridHeight  = 1.0
;      upDownLabel = "RICHER", "LEANER"
;      gridOrient  = 250,   0, 340
;
;
;
;[CurveEditor]
;
;;tps-based accel enrichment
;      curve = time_accel_tpsdot_curve, "TPS based AE"
;            columnLabel = "TPSdot", "Added"
;            xAxis = 0, 1200, 6
;            yAxis = 0, 250, 4
;            xBins = taeBins, TPSdot
;            yBins = taeRates
;
;;map-based accel enrichment
;      curve = time_accel_mapdot_curve, "MAP based AE"
;            columnLabel = "MAPdot", "Added"
;            xAxis = 0, 1200, 6
;            yAxis = 0, 250, 4
;            xBins = maeBins, MAPdot
;            yBins = maeRates



















